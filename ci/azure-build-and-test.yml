# Main build jobs for CI/CD on Azure Pipelines.

parameters:
- name: builds
  type: object
  default:

  - name: linux_stable
    vmImage: ubuntu-22.04
    vars:
      TARGET: x86_64-unknown-linux-gnu
      TOOLCHAIN: stable

  - name: linux_beta
    vmImage: ubuntu-22.04
    vars:
      TARGET: x86_64-unknown-linux-gnu
      TOOLCHAIN: beta

  - name: macos
    vmImage: macos-latest
    vars:
      TARGET: x86_64-apple-darwin
      TOOLCHAIN: stable

- name: crossBuilds
  type: object
  default:
  - name: aarch64_unknown_linux_gnu
    vmImage: ubuntu-latest
    params: {}
    vars:
      TARGET: aarch64-unknown-linux-gnu

  - name: powerpc64le_unknown_linux_gnu
    vmImage: ubuntu-latest
    params: {}
    vars:
      TARGET: powerpc64le-unknown-linux-gnu

  - name: aarch64_apple_darwin
    vmImage: macos-latest
    params:
      hostTriple: "x86_64-apple-darwin"
      qemuAndTest: false
    vars:
      TARGET: aarch64-apple-darwin

jobs:

# Main builds
- ${{ each build in parameters.builds }}:
  - job: ${{ format('build_{0}', build.name) }}
    pool:
      vmImage: ${{ build.vmImage }}
    steps:

    - template: azure-job-setup.yml
      parameters:
        setupBuild: true

    - bash: cargo build --all --release
      displayName: "cargo build (release)"

    - bash: cargo build --all --release --examples
      displayName: "cargo build examples (release)"

    - bash: cargo test --all --release
      displayName: "cargo test (release)"

    variables:
      ${{ insert }}: ${{ build.vars }}

# Cross builds
- ${{ each build in parameters.crossBuilds }}:
  - job: ${{ format('cross_{0}', build.name) }}
    pool:
      vmImage: ${{ build.vmImage }}
    steps:
    - template: azure-cross-build.yml
      parameters:
        ${{ insert }}: ${{ build.params }}
    variables:
      ${{ insert }}: ${{ build.vars }}


# rustfmt check
- job: rustfmt
  pool:
    vmImage: ubuntu-latest
  steps:
  - template: azure-job-setup.yml
  - bash: rustup component add rustfmt
    displayName: "Install rustfmt"
  - bash: cargo fmt --all -- --check
    displayName: "Check rustfmt (cargo)"
  variables:
    TOOLCHAIN: stable


# clippy check
- job: clippy
  pool:
    vmImage: ubuntu-latest
  steps:
  - template: azure-job-setup.yml
  - bash: rustup component add clippy
    displayName: "Install clippy"
  - bash: cargo clippy --all --all-targets --all-features -- --deny warnings
    displayName: "Check clippy (cargo)"
  variables:
    TOOLCHAIN: stable
